[{"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/index.js":"1","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/reportWebVitals.js":"2","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/App.js":"3","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/theme.js":"4","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/likedmovies.js":"5","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/matching.js":"6","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/login.js":"7","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/header/header.js":"8","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/mymatches.js":"9","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LikedMovies/LikedMovies.js":"10","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/card/flipCard.js":"11","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MatchedMovies/MatchedMovies.js":"12","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LoginHero/Login.js":"13","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MyMatches/MyMatches.js":"14","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LikedMovies/styles.js":"15","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MatchedMovies/styles.js":"16","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MyMatches/useMedia.js":"17","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MyMatches/useMeasure.js":"18","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/utils/API.js":"19"},{"size":437,"mtime":1613570474087,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1613570474088,"results":"22","hashOfConfig":"21"},{"size":1060,"mtime":1613570474083,"results":"23","hashOfConfig":"21"},{"size":868,"mtime":1613570474087,"results":"24","hashOfConfig":"21"},{"size":324,"mtime":1613570474087,"results":"25","hashOfConfig":"21"},{"size":173,"mtime":1613570474087,"results":"26","hashOfConfig":"21"},{"size":165,"mtime":1613570474087,"results":"27","hashOfConfig":"21"},{"size":6745,"mtime":1613570474086,"results":"28","hashOfConfig":"21"},{"size":209,"mtime":1613570474088,"results":"29","hashOfConfig":"21"},{"size":5290,"mtime":1613570474083,"results":"30","hashOfConfig":"21"},{"size":6941,"mtime":1613570474086,"results":"31","hashOfConfig":"21"},{"size":5314,"mtime":1613570474084,"results":"32","hashOfConfig":"21"},{"size":7867,"mtime":1613572302744,"results":"33","hashOfConfig":"21"},{"size":4975,"mtime":1613571595948,"results":"34","hashOfConfig":"21"},{"size":1052,"mtime":1613570474084,"results":"35","hashOfConfig":"21"},{"size":1052,"mtime":1613570474084,"results":"36","hashOfConfig":"21"},{"size":435,"mtime":1613570474085,"results":"37","hashOfConfig":"21"},{"size":424,"mtime":1613570474085,"results":"38","hashOfConfig":"21"},{"size":1128,"mtime":1613570474088,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"189a45l",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/index.js",[],["91","92"],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/reportWebVitals.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/App.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/theme.js",["93"],"import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst matchRed = '#EF4B4B';\nconst matchGrey = '#707070';\nconst matchLightGrey = '#afafac';\nconst matchBlue = \"#0B72B9\";\n\n\nexport default createMuiTheme({\n    palette: {\n        common: {\n            red: matchRed,\n            grey: matchGrey,\n            lightGrey: matchLightGrey,\n            blue: matchBlue\n        },\n        primary: {\n            main: matchRed\n        },\n        secondary: {\n            main: matchGrey\n        },\n\n    },\n    typography: {\n        buttonMain: {\n            backgroundColor: matchRed,\n            color: \"white\",\n            width: \"7.5em\",\n            height: \"2.75em\"\n        },\n        buttonSecondary: {\n            backgroundColor: matchGrey,\n            color: \"white\",\n            width: \"7.5em\",\n            height: \"2.75em\"\n        }\n    }\n});\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/likedmovies.js",["94","95"],"import React, { useState, useEffect } from \"react\";\nimport LikedMovies from \"../components/LikedMovies/LikedMovies\";\nimport MatchedMovies from \"../components/MatchedMovies/MatchedMovies\";\n\nexport default function LikedMoviesPage () {\n\n  return (\n    <>\n            <LikedMovies />\n            <MatchedMovies />\n    </>\n  )\n}","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/matching.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/login.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/header/header.js",["96","97","98"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/ToolBar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport logo from '../../assets/Header.svg';\n\n\n const useStyles = makeStyles((theme) => ({\n     logo: {\n         backgroundColor: \"main\",\n         height: \"8em\",\n         [theme.breakpoints.down(\"md\")]: {\n             height: \"7em\",\n             width: \"80%\",\n             marginLeft: \"-10em\"\n         },\n         [theme.breakpoints.down(\"xs\")]: {\n             height: \"5.5em\",\n             width: \"75%\",\n             marginLeft: \"-5.5em\"\n         }\n     },\n     logoContainer: {\n        padding: 0,\n        marginRight: 'auto'\n     },\n     appbar: {\n         backgroundColor: \"#EF4B4B\",\n         zIndex: theme.zIndex.modal + 1\n     },\n     toolbarMargin: {\n         ...theme.mixins.toolbar,\n         marginBootom: \"3em\",\n         [theme.breakpoints.down(\"md\")]: {\n             marginBottom: \"2em\"\n         },\n        [theme.breakpoints.down(\"xs\")]: {\n            marginBottom: \"1.25em\"\n        }\n     },\n     sectionDesktop: {\n         display: 'none',\n     [theme.breakpoints.up('md')]: {\n         display: 'flex',\n        },\n     },\n     sectionMobile: {\n         dipaly: 'flex',\n         [theme.breakpoints.up('md')]: {\n             display: 'none'\n         },\n     },\n     desktopMenu: {\n         \"& .MuiMenu-list\": {\n             width: \"100%\",\n             height: \"100%\",\n             Color: \"#242433\"\n         }\n     }\n }));\n\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [mobileAnchorEl, setMobileAnchorEl] = useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileAnchorEl(null);\n    }\n    \n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const menuId = 'primary-account-menu';\n    const renderMenu = (\n        <Menu\n            className={classes.desktopMenu}\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem \n                onClick={handleMenuClose}\n                component={Link}\n                to={\"/mymatches\"}\n            >\n                My Matches\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>Account Settings</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-account-menu-mobile'\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <AppsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Matches</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <>\n\n            <AppBar className={classes.appbar} position=\"static\">\n                <ToolBar disableGutters>\n                    <Button \n                        className={classes.logoContainer}\n                        component={Link}\n                        to={\"/\"}\n                    >\n                        <img alt=\"site logo\" src={logo} className={classes.logo} />\n                    </Button>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton \n                            color=\"inherit\"\n                            component={Link}\n                            to={\"/liked\"}\n                            \n                        >\n                            <Badge badgeContent={null} color=\"secondary\">\n                                <AppsIcon style={{fontSize:\"60\"}}/>\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            style={{marginRight: \"5em\"}}\n                            \n                            aria-label=\"accout of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle style={{fontSize:\"60\"}} />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton> \n                    </div>\n                </ToolBar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </>\n    )\n};\n\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/mymatches.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LikedMovies/LikedMovies.js",["99"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useTransition, useSpring, useChain, config } from \"react-spring\";\nimport { Global, Container, Item } from \"./styles\";\nimport API from \"../../utils/API\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport AspectRatioIcon from \"@material-ui/icons/AspectRatio\";\nimport MinimizeIcon from \"@material-ui/icons/Minimize\";\n\nexport default function LikedMovies() {\n  const [open, set] = useState(false);\n  const [displayExpand, setDisplayExpand] = useState(\"block\");\n  const [displayMinimize, setDisplayMinimize] = useState(\"none\");\n\n  const handleExpand = () => {\n    set((open) => !open);\n    setDisplayExpand(\"none\");\n    setDisplayMinimize(\"block\");\n  };\n\n  const handleMinimize = () => {\n    set((open) => !open);\n    setDisplayExpand(\"block\");\n    setDisplayMinimize(\"none\");\n  };\n\n  ////////////////////////////BackDrop-expand//////////////////////////////////\n  const useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      display: \"flex\"\n    },\n    expand: {\n      margin: \"0 auto\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"100%\",\n      backgroundSize: \"contain\",\n      backgroundPosition: \"center center\",\n      backgroundRepeat: \"no-repeat\",\n      overflow: \"hidden\",\n      display: \"flex\"\n    }\n  }));\n\n  const classes = useStyles();\n  const [openBackDrop, setOpen] = useState(false);\n  const [clickedMovie, setClickedMovie] = useState({});\n  let frontImage =\n    \"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n    clickedMovie.posterImage;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = (item) => {\n    setOpen(!openBackDrop);\n    setClickedMovie(item);\n  };\n\n  const expandMovie = (\n    <>\n      <div\n        className={classes.expand}\n        style={{\n          backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, .2) 5%, rgba(0, 0, 0, 1) 95%), url(${frontImage})`\n        }}\n      >\n        <div className=\"movieInfo\">\n          {clickedMovie.description}\n          <StarRoundedIcon className={classes.ratingIcon} fontSize=\"large\" />\n          <span>{`${clickedMovie.rating}`} / 10</span>\n        </div>\n      </div>\n    </>\n  );\n\n  function handleDelete(e, item) {\n    e.stopPropagation();\n    console.log(\"item\", item);\n    let id = item._id;\n    console.log(\"id\", id);\n    API.deleteMovie(id)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  // Api call and setting state for user's liked movies\n  const [savedMovies, setSavedMovies] = useState([]);\n  savedMovies.map((movie) => {\n    movie.css =\n      \"url(https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n      movie.posterImage +\n      \")\";\n    movie.height = 900;\n  });\n\n  useEffect(() => {\n    API.getMatches()\n      .then((res) => {\n        setSavedMovies(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const springRef = useRef();\n  const { size, opacity, ...rest } = useSpring({\n    ref: springRef,\n    config: config.stiff,\n    from: { size: \"20%\", background: \"red\" },\n    to: { size: open ? \"100%\" : \"20%\", background: open ? \"white\" : \"red\" }\n  });\n\n  const transRef = useRef();\n  const transitions = useTransition(\n    open ? savedMovies : [],\n    (movie) => movie.css,\n    {\n      ref: transRef,\n      unique: true,\n      trail: 400 / savedMovies.length,\n      from: { opacity: 0, transform: \"scale(0)\" },\n      enter: { opacity: 1, transform: \"scale(1)\" },\n      leave: { opacity: 0, transform: \"scale(0)\" }\n    }\n  );\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [\n    0,\n    open ? 0.1 : 0.6\n  ]);\n\n  return (\n    <>\n      <Global />\n      <MinimizeIcon\n        onClick={handleMinimize}\n        fontSize=\"large\"\n        style={{ display: displayMinimize, border: \"2px black solid\" }}\n      />\n      <Container style={{ ...rest, width: size, height: size }}>\n        <h1 style={{ display: displayExpand, color: 'white' }}>Liked Movies</h1>\n        <AspectRatioIcon\n          onClick={handleExpand}\n          style={{ display: displayExpand }}\n        />\n\n        {transitions.map(({ item, key, props }) => (\n          <Item\n            key={key}\n            style={{ ...props, backgroundImage: item.css }}\n            onClick={(e) => handleToggle(item)}\n          >\n            <HighlightOffOutlinedIcon\n              fontSize=\"large\"\n              style={{ background: \"white\" }}\n              onClick={(e) => handleDelete(e, item)}\n            />\n          </Item>\n        ))}\n      </Container>\n      <Backdrop\n        className={classes.backdrop}\n        open={openBackDrop}\n        onClick={handleClose}\n      >\n        {openBackDrop ? expandMovie : null}\n      </Backdrop>\n    </>\n  );\n}\n\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/card/flipCard.js",["100","101","102","103"],"import { useSpring, animated as a } from \"react-spring\";\nimport \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport API from \"../../utils/API\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport ThumbUpTwoToneIcon from \"@material-ui/icons/ThumbUpTwoTone\";\nimport ThumbDownTwoToneIcon from \"@material-ui/icons/ThumbDownTwoTone\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {},\n  cardContainer: {\n    width: \"100%\"\n  },\n  thumbsContainer: {\n    margin: \"3em\"\n  },\n  thumbsUp: {\n    color: \"darkGreen\",\n    marginRight: \"10em\"\n  },\n  thumbsDown: {\n    color: theme.palette.common.red,\n    marginLeft: \"10em\"\n  },\n  rating: {\n    fontSize: \"22px\",\n    position: \"relative\",\n    bottom: 8\n  },\n  ratingIcon: {\n    marginTop: \".75em\"\n  }\n}));\n\nexport default function FlipCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [flipped, set] = useState(false);\n  const { transform, opacity } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: { mass: 5, tension: 500, friction: 80 }\n  });\n  let results = [];\n  let pageNumber = 1;\n\n  const [movieState, setmovieState] = useState({\n    title: \"\",\n    posterImage: \"\",\n    backdropImage: \"\",\n    description: \"\",\n    rating: \"\",\n    reviewCount: \"\",\n    release: \"\",\n    genre: \"\"\n  });\n\n  const [checked, setChecked] = useState(false);\n  let frontImage =\n    \"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n    movieState.posterImage;\n  let backImage =\n    \"https://www.themoviedb.org/t/p/w1280_and_h720_bestv2\" +\n    movieState.backdropImage;\n\n  useEffect(() => {\n    API.getMovies(pageNumber).then((response) => {\n      results = response.data.results;\n      console.log(results);\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n    });\n  }, []);\n\n  function addMovie(movieState) {\n    return API.saveMovie({\n      ...movieState\n    })\n      .then((res) => {\n        console.log(\"response\", res);\n        return res.data;\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleShift() {\n    pageNumber++;\n    API.getMovies(pageNumber).then((response) => {\n      results = response.data.results;\n      console.log(results);\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n    });\n  }\n\n  const handleNo = () => {\n    results = JSON.parse(localStorage.getItem(\"movieArray\"));\n    if (results.length === 1) {\n      handleShift();\n    } else {\n      results.shift();\n\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n    }\n  };\n\n  const handleYes = () => {\n    results = JSON.parse(localStorage.getItem(\"movieArray\"));\n    let movieData = results[0];\n    if (results.length === 1) {\n      handleShift();\n    } else {\n      results.shift();\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n    }\n    addMovie(movieState);\n  };\n\n  const thumbs = (\n    <>\n      <Grid \n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        className=\"thumbs\"\n      >\n        <Grid item>\n          <Button onClick={handleNo}>\n            <ThumbDownTwoToneIcon\n              className={classes.thumbsDown}\n              fontSize=\"large\"\n            />\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button onClick={handleYes}>\n            <ThumbUpTwoToneIcon\n              className={classes.thumbsUp}\n              fontSize=\"large\"\n              color=\"primary\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n    \n  );\n\n  const thumbsUp = (\n    <>\n\n    </>\n  );\n\n  return (\n    <>\n      <div>\n          {matches ? null : thumbs}\n        <div className=\"carddiv\" onClick={() => set((state) => !state)}>\n          <a.div\n            className=\"c front\"\n            style={{\n              backgroundImage: `url(${frontImage})`,\n              opacity: opacity.interpolate((o) => 1 - o),\n              transform\n            }}\n          ></a.div>\n          <a.div\n            className=\"c back\"\n            style={{\n              backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, .1) 10%, rgba(0, 0, 0, 1) 95%), url(${backImage})`,\n              opacity,\n              transform: transform.interpolate((t) => `${t} rotateX(180deg)`)\n            }}\n          >\n            <div className=\"movieInfo\">\n              {movieState.description}\n              <StarRoundedIcon\n                className={classes.ratingIcon}\n                fontSize=\"large\"\n              />\n              <span>{`${movieState.rating}`} / 10</span>\n            </div>\n          </a.div>\n         \n        </div>\n        <Grid\n            container\n            className={classes.thumbsContainer}\n            direction=\"row\"\n            justify=\"center\"\n            alignContent=\"flex-end\"\n            alignItems=\"center\"\n          >\n            <Grid item style={{ marginRight: \"5em\" }}>\n              {matches ? thumbs : null}\n            </Grid>\n            <Grid item style={{ marginLeft: \"5em\" }}>\n              {matches ? thumbsUp : null}\n            </Grid>\n          </Grid>\n      </div>\n    </>\n  );\n}\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MatchedMovies/MatchedMovies.js",["104"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useTransition, useSpring, useChain, config } from \"react-spring\";\nimport { Global, Container, Item } from \"./styles\";\nimport API from \"../../utils/API\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport AspectRatioIcon from \"@material-ui/icons/AspectRatio\";\nimport MinimizeIcon from \"@material-ui/icons/Minimize\";\n\nexport default function MatchedMovies() {\n  const [open, set] = useState(false);\n  const [displayExpand, setDisplayExpand] = useState(\"block\");\n  const [displayMinimize, setDisplayMinimize] = useState(\"none\");\n\n  const handleExpand = () => {\n    set((open) => !open);\n    setDisplayExpand(\"none\");\n    setDisplayMinimize(\"block\");\n  };\n\n  const handleMinimize = () => {\n    set((open) => !open);\n    setDisplayExpand(\"block\");\n    setDisplayMinimize(\"none\");\n  };\n\n  ////////////////////////////BackDrop-expand//////////////////////////////////\n  const useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      display: \"flex\"\n    },\n    expand: {\n      margin: \"0 auto\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"100%\",\n      backgroundSize: \"contain\",\n      backgroundPosition: \"center center\",\n      backgroundRepeat: \"no-repeat\",\n      overflow: \"hidden\",\n      display: \"flex\"\n    }\n  }));\n\n  const classes = useStyles();\n  const [openBackDrop, setOpen] = useState(false);\n  const [clickedMovie, setClickedMovie] = useState({});\n  let frontImage =\n    \"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n    clickedMovie.posterImage;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = (item) => {\n    setOpen(!openBackDrop);\n    setClickedMovie(item);\n  };\n\n  const expandMovie = (\n    <>\n      <div\n        className={classes.expand}\n        style={{\n          backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, .2) 5%, rgba(0, 0, 0, 1) 95%), url(${frontImage})`\n        }}\n      >\n        <div className=\"movieInfo\">\n          {clickedMovie.description}\n          <StarRoundedIcon className={classes.ratingIcon} fontSize=\"large\" />\n          <span>{`${clickedMovie.rating}`} / 10</span>\n        </div>\n      </div>\n    </>\n  );\n\n  function handleDelete(e, item) {\n    e.stopPropagation();\n    console.log(\"item\", item);\n    let id = item._id;\n    console.log(\"id\", id);\n    API.deleteMovie(id)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  // Api call and setting state for user's liked movies\n  const [savedMovies, setSavedMovies] = useState([]);\n  savedMovies.map((movie) => {\n    movie.css =\n      \"url(https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n      movie.posterImage +\n      \")\";\n    movie.height = 900;\n  });\n\n  useEffect(() => {\n    API.getMatches()\n      .then((res) => {\n        setSavedMovies(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const springRef = useRef();\n  const { size, opacity, ...rest } = useSpring({\n    ref: springRef,\n    config: config.stiff,\n    from: { size: \"20%\", background: \"black\" },\n    to: { size: open ? \"100%\" : \"20%\", background: open ? \"white\" : \"black\" }\n  });\n\n  const transRef = useRef();\n  const transitions = useTransition(\n    open ? savedMovies : [],\n    (movie) => movie.css,\n    {\n      ref: transRef,\n      unique: true,\n      trail: 400 / savedMovies.length,\n      from: { opacity: 0, transform: \"scale(0)\" },\n      enter: { opacity: 1, transform: \"scale(1)\" },\n      leave: { opacity: 0, transform: \"scale(0)\" }\n    }\n  );\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [\n    0,\n    open ? 0.1 : 0.6\n  ]);\n\n  return (\n    <>\n      <Global />\n      <MinimizeIcon\n        onClick={handleMinimize}\n        fontSize=\"large\"\n        style={{ display: displayMinimize, border: \"2px black solid\" }}\n      />\n      <Container style={{ ...rest, width: size, height: size }}>\n        <h1 style={{ display: displayExpand, color: 'white' }}>Matched Movies</h1>\n        <AspectRatioIcon\n          onClick={handleExpand}\n          style={{ display: displayExpand, color: 'white' }}\n        />\n\n        {transitions.map(({ item, key, props }) => (\n          <Item\n            key={key}\n            style={{ ...props, backgroundImage: item.css }}\n            onClick={(e) => handleToggle(item)}\n          >\n            <HighlightOffOutlinedIcon\n              fontSize=\"large\"\n              style={{ background: \"white\" }}\n              onClick={(e) => handleDelete(e, item)}\n            />\n          </Item>\n        ))}\n      </Container>\n      <Backdrop\n        className={classes.backdrop}\n        open={openBackDrop}\n        onClick={handleClose}\n      >\n        {openBackDrop ? expandMovie : null}\n      </Backdrop>\n    </>\n  );\n}\n\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LoginHero/Login.js",["105","106","107","108"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardContent } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport API from \"../../utils/API\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContainer: {\n    marginTop: \"10em\",\n    width: \"32em\"\n  },\n  hero: {\n    marginTop: \"10em\",\n    height: \"20em\"\n  },\n  card: {\n    boxShadow: \"12px 12px 2px 1px rgba(0, 0, 255, .2)\",\n    borderStyle: \"groove\",\n    width: \"100%\"\n  },\n  cardHeader: {\n    display: \"inline-block\"\n  },\n  cardContent: {},\n  div: {\n    borderRight: \"1px dashed grey\",\n    marginTop: \"-1em\",\n    marginBottom: \"-2em\",\n    marginRight: \"5em\"\n  },\n  button: {\n    backgroundColor: theme.palette.common.red,\n    height: \"14em\",\n    width: \"1em\",\n    float: \"right\",\n    color: \"white\"\n  },\n  email: {\n    marginTop: \"1.5em\",\n    marginLeft: \"2em\",\n    padding: \".5em\"\n  },\n  password: {\n    marginTop: \"1.5em\",\n    marginLeft: \"2em\",\n    padding: \".5em\"\n  },\n  signup: {\n    marginTop: \"2em\",\n    width: \"30em\",\n    textAlign: \"center\"\n  },\n  signUpForm: {\n    marginLeft: \"1em\",\n    marginRight: \"1em\",\n    textAlign: \"center\"\n  },\n  leftQuestions: {\n    marginRight: \"2em\",\n    marginBottom: \"1em\"\n  },\n  rightQuestions: {\n    marginLeft: \"2em\",\n    marginBottom: \"1em\"\n  },\n  submitButton: {\n    display: \"block\",\n    margin: \"auto\",\n    marginTop: \"1em\"\n  }\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [loggedIn, setLoggedIn] = useState({\n    loggedIn: false,\n    email: null\n  });\n  const [upForm, setUpForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [inForm, setInForm] = useState({\n    email: \"\",\n    password: \"\",\n    redirectTo: null\n  });\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleSignUp() {\n    if (!upForm.email) {\n      console.log(\"please enter an email address\");\n      return;\n    } else if (!upForm.password) {\n      console.log(\"please enter a password\");\n      return;\n    } else if (!upForm.firstName) {\n      console.log(\"please enter a first name\");\n      return;\n    } else if (!upForm.lastName) {\n      console.log(\"please enter a last name\");\n      return;\n    } else {\n      API.getUser(upForm.email).then((response) => {\n        if (response.data === null) {\n          API.createUser({ ...upForm })\n            .then((response) => {\n              console.log(response);\n              return response;\n            })\n            .then((response) => {\n              console.log(\"response\", response);\n              return response;\n              setUpForm({\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                password: \"\"\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n              alert(\"Email address provided is already signed up\");\n            });\n        } else {\n          console.log(\"pick a different email\");\n        }\n      });\n    }\n  }\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUpForm({ ...upForm, [name]: value });\n  };\n\n  const handleSignInChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setInForm({ ...inForm, [name]: value });\n  };\n\n  function handleSignIn() {\n    console.log(inForm);\n    if (!inForm.email) {\n      console.log(\"please enter your email\");\n      return;\n    } else if (!inForm.password) {\n      console.log(\"please enter your password\");\n      return;\n    } else {\n      API.getLogin(inForm).then((response) => {\n        console.log(\"getLogin Response\", response);\n        console.log('test', response.status);\n        if (response.status === 200) {\n          setInForm({ redirectTo: true });\n          console.log(\"inform\", inForm);\n        }\n      });\n    }\n  }\n\n  return (\n    <>\n      <Container className={classes.heroContainer}>\n        <Card className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            <Button className={classes.button} onClick={handleSignIn}>\n              Admit\n            </Button>\n            <div className={classes.div}>\n              <form style={{ height: \"100%\" }}>\n                <TextField\n                  className={classes.email}\n                  id=\"standard-basic\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={(e) => {\n                    handleSignInChange(e);\n                  }}\n                />\n                <TextField\n                  className={classes.password}\n                  id=\"standard-basic\"\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={(e) => {\n                    handleSignInChange(e);\n                  }}\n                />\n              </form>\n            </div>\n          </CardContent>\n        </Card>\n        <div className={classes.signup}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            Not a user? Sign up for free today!\n          </Button>\n          <Dialog\n            disableBackdropClick\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Signup\"}\n              <Button style={{ float: \"right\", height: \"1em\", width: \"1em\" }}>\n                <CloseRoundedIcon button onClick={handleClose} />\n              </Button>\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <form className={classes.signUpForm}>\n                  <TextField\n                    className={classes.leftQuestions}\n                    label=\"First Name\"\n                    required\n                    name=\"firstName\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <TextField\n                    className={classes.rightQuestions}\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <TextField\n                    className={classes.leftQuestions}\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <TextField\n                    className={classes.rightQuestions}\n                    label=\"password\"\n                    name=\"password\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Button\n                    className={classes.submitButton}\n                    variant=\"outlined\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      handleSignUp(upForm);\n                      handleClose();\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </form>\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </Container>\n    </>\n  );\n}\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MyMatches/MyMatches.js",["109"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { useTransition, a } from \"react-spring\";\nimport useMeasure from \"./useMeasure\";\nimport useMedia from \"./useMedia\";\nimport \"./styles.css\";\nimport API from \"../../utils/API\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport HighlightOffOutlinedIcon from '@material-ui/icons/HighlightOffOutlined';\n\nexport default function MyMatches() {\n  const useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      display: 'flex'\n    },\n    expand: {\n      margin: '0 auto',\n     alignItems: 'center',\n     width: '100%',\n     height: '100%',\n     backgroundSize: 'contain',\n     backgroundPosition: 'center center',\n     backgroundRepeat: 'no-repeat',\n     overflow: \"hidden\",\n     display: 'flex'\n    }\n  }));\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [clickedMovie, setClickedMovie] = useState({});\n  let frontImage =\n    \"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n    clickedMovie.posterImage;\n    \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = (item) => {\n    setOpen(!open);\n    setClickedMovie(item);\n  };\n\n  const expandMovie = (\n    <>\n      <div\n        className={classes.expand}\n        style={{\n          backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, .2) 5%, rgba(0, 0, 0, 1) 95%), url(${frontImage})`\n        }}\n      >\n        <div className=\"movieInfo\">\n          {clickedMovie.description}\n          <StarRoundedIcon className={classes.ratingIcon} fontSize=\"large\" />\n          <span>{`${clickedMovie.rating}`} / 10</span>\n        </div>\n      </div>\n    </>\n  );\n\n  function handleDelete(item){\n    let id = item._id;\n    API.deleteMovie(id)\n    .then(res => {\n      window.location.reload();\n    })\n    .catch(err => console.log(err));\n  }\n\n\n  const [savedMovies, setSavedMovies] = useState([]);\n  savedMovies.map((movie) => {\n    movie.css =\n      \"url(https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n      movie.posterImage +\n      \")\";\n    movie.height = 900;\n  });\n\n  useEffect(() => {\n    API.getMatches()\n      .then((res) => {\n        setSavedMovies(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(\n    [\n      \"(min-width: 600px)\",\n      \"(min-width: 600px)\",\n      \"(min-width: 600px)\",\n      \"(min-width: 600px)\"\n    ],\n    [5, 4, 3, 2],\n    1\n  );\n\n  // Hook2: Measure the width of the container element\n  const [bind, { width }] = useMeasure();\n\n  // Hook5: Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  const [heights, gridItems] = useMemo(() => {\n    let heights = new Array(columns).fill(0); // Each column gets a height starting with zero\n    let gridItems = savedMovies.map((child, i) => {\n      const column = heights.indexOf(Math.min(...heights)); // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n      const xy = [\n        (width / columns) * column,\n        (heights[column] += child.height / 2) - child.height / 2\n      ]; // X = container width / number of columns * column index, Y = it's just the height of the current column\n      return { ...child, xy, width: width / columns, height: child.height / 2 };\n    });\n    return [heights, gridItems];\n  }, [columns, savedMovies, width]);\n\n  // Hook6: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, (movie) => movie.css, {\n    from: ({ xy, width, height }) => ({ xy, width, height, opacity: 0 }),\n    enter: ({ xy, width, height }) => ({ xy, width, height, opacity: 1 }),\n    update: ({ xy, width, height }) => ({ xy, width, height }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 },\n    trail: 25,\n  });\n  // Render the grid\n  return (\n    <>\n    <div {...bind} class=\"list\" style={{ height: Math.max(...heights) }}>\n      {transitions.map(({ item, props: { xy, ...rest }, key }) => (\n        <a.div\n          key={key}\n          style={{\n            transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`),\n            ...rest\n          }}\n        >\n          <div\n          className=\"likedImage\"\n            style={{ backgroundImage: item.css }}\n            onClick={(e) => handleToggle(item)}\n          ><HighlightOffOutlinedIcon fontSize=\"large\" style={{ background: 'white'}} onClick={(e) => handleDelete(item)} /></div>\n        </a.div>\n      ))}\n     \n    </div>\n     <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n     {open ? expandMovie : null}\n   </Backdrop>\n   </>\n  );\n}\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LikedMovies/styles.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MatchedMovies/styles.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MyMatches/useMedia.js",["110"],"import { useEffect, useState } from 'react'\n\nexport default function useMedia(queries, values, defaultValue) {\n  const match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue\n  const [value, set] = useState(match)\n  useEffect(() => {\n    const handler = () => set(match)\n    window.addEventListener('resize', handler)\n    return () => window.removeEventListener('resize', handler)\n  }, [])\n  return value\n}\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/MyMatches/useMeasure.js",["111","112"],"import { useRef, useState, useEffect } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default function useMeasure() {\n  const ref = useRef()\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\n  const [ro] = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)))\n  useEffect(() => (ro.observe(ref.current), ro.disconnect), [])\n  return [{ ref }, bounds]\n}\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/utils/API.js",["113"],"import axios from \"axios\";\n\nexport default {\n   \n// Gets all movies\n  getMovies: function (pageNumber) {\n    return axios.get(\n      // Gets all movies\n      `https://api.themoviedb.org/3/discover/movie?api_key=1a0244fad68dbfa1e242e232ce4a493c&language=en-US&primary_release_year=2020&with_genres=80&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNumber}`\n    );\n  },\n  getMatches: function() {\n    return axios.get(\"/api/movies\")\n  },\n  // Gets movie with given id\n  getMovie: function (id) {\n    return axios.get(\"/api/movies/\" + id);\n  },\n  // Deletes movie with given id\n  deleteMovie: function (id) {\n    return axios.delete(\"/api/movies/\" + id);\n  },\n  saveMovie: function (movieData) {\n    return axios.post(\"/api/movies\", movieData);\n  },\n  createUser: function(userData) {\n    return axios.post(\"/api/users/\", userData);\n  },\n  getLogin: function(userData) {\n    return axios.post(\"/api/users/login\", userData);\n  },\n  getUser: function(userData) {\n    return axios.get(\"/api/users/\" + userData);\n  },\n  deleteUser: function(userId) {\n    return axios.delete(\"/api/users/\" + userId);\n  }\n};\n",["114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":26,"nodeType":"122","messageId":"123","endLine":1,"endColumn":39},{"ruleId":"120","severity":1,"message":"124","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"125","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"125","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"126","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":16},{"ruleId":"120","severity":1,"message":"127","line":76,"column":11,"nodeType":"122","messageId":"123","endLine":76,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":101,"column":27,"nodeType":"130","messageId":"131","endLine":101,"endColumn":29},{"ruleId":"120","severity":1,"message":"132","line":63,"column":10,"nodeType":"122","messageId":"123","endLine":63,"endColumn":17},{"ruleId":"120","severity":1,"message":"133","line":63,"column":19,"nodeType":"122","messageId":"123","endLine":63,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":73,"column":17,"nodeType":"136","endLine":73,"endColumn":38},{"ruleId":"120","severity":1,"message":"137","line":145,"column":9,"nodeType":"122","messageId":"123","endLine":145,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":101,"column":27,"nodeType":"130","messageId":"131","endLine":101,"endColumn":29},{"ruleId":"120","severity":1,"message":"138","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":21},{"ruleId":"120","severity":1,"message":"139","line":85,"column":10,"nodeType":"122","messageId":"123","endLine":85,"endColumn":18},{"ruleId":"120","severity":1,"message":"140","line":85,"column":20,"nodeType":"122","messageId":"123","endLine":85,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":132,"column":15,"nodeType":"143","messageId":"144","endLine":137,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":79,"column":27,"nodeType":"130","messageId":"131","endLine":79,"endColumn":29},{"ruleId":"134","severity":1,"message":"145","line":10,"column":6,"nodeType":"146","endLine":10,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":8,"column":43,"nodeType":"150","messageId":"151","endLine":8,"endColumn":44},{"ruleId":"134","severity":1,"message":"152","line":8,"column":61,"nodeType":"146","endLine":8,"endColumn":63,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":1,"nodeType":"156","endLine":38,"endColumn":3},{"ruleId":"116","replacedBy":"157"},{"ruleId":"118","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'MenuIcon' is defined but never used.","'theme' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'results' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'movieData' is assigned a value but never used.","'DialogActions' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["161"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'ro'. Either include it or remove the dependency array.",["162"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [match]",{"range":"167","text":"168"},"Update the dependencies array to be: [ro]",{"range":"169","text":"170"},[414,416],"[match]",[391,393],"[ro]"]