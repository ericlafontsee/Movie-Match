[{"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/index.js":"1","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/App.js":"2","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/reportWebVitals.js":"3","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/matching.js":"4","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/mymatches.js":"5","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/theme.js":"6","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/login.js":"7","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/header/header.js":"8","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/card/card.js":"9","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/utils/API.js":"10","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LoginHero/Login.js":"11","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/card/flipCard.js":"12"},{"size":437,"mtime":1611013160869,"results":"13","hashOfConfig":"14"},{"size":908,"mtime":1611509093046,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611013160870,"results":"16","hashOfConfig":"14"},{"size":242,"mtime":1611509105505,"results":"17","hashOfConfig":"14"},{"size":952,"mtime":1611021413143,"results":"18","hashOfConfig":"14"},{"size":868,"mtime":1611013160869,"results":"19","hashOfConfig":"14"},{"size":165,"mtime":1611013160869,"results":"20","hashOfConfig":"14"},{"size":6801,"mtime":1611081643919,"results":"21","hashOfConfig":"14"},{"size":8952,"mtime":1611278794883,"results":"22","hashOfConfig":"14"},{"size":779,"mtime":1611082304731,"results":"23","hashOfConfig":"14"},{"size":4571,"mtime":1611013160868,"results":"24","hashOfConfig":"14"},{"size":3189,"mtime":1611509906238,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"189a45l",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/index.js",[],["58","59"],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/App.js",["60"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from \"./components/theme\";\nimport Header from './components/header/header';\nimport MatchingPage from './pages/matching';\nimport MyMatches from './pages/mymatches';\nimport LoginPage from './pages/login';\nimport React from \"react\";\n\nfunction App() {\n \n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        {/* <Header /> */}\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={MatchingPage}\n          />\n          <Route\n            exact\n            path=\"/mymatches\"\n            component={MyMatches}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            component={LoginPage}\n          />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/reportWebVitals.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/matching.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/mymatches.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/theme.js",["61"],"import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst matchRed = '#EF4B4B';\nconst matchGrey = '#707070';\nconst matchLightGrey = '#afafac';\nconst matchBlue = \"#0B72B9\";\n\n\nexport default createMuiTheme({\n    palette: {\n        common: {\n            red: matchRed,\n            grey: matchGrey,\n            lightGrey: matchLightGrey,\n            blue: matchBlue\n        },\n        primary: {\n            main: matchRed\n        },\n        secondary: {\n            main: matchGrey\n        },\n\n    },\n    typography: {\n        buttonMain: {\n            backgroundColor: matchRed,\n            color: \"white\",\n            width: \"7.5em\",\n            height: \"2.75em\"\n        },\n        buttonSecondary: {\n            backgroundColor: matchGrey,\n            color: \"white\",\n            width: \"7.5em\",\n            height: \"2.75em\"\n        }\n    }\n});\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/pages/login.js",[],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/header/header.js",["62","63","64"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/ToolBar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport logo from '../../assets/Header.svg';\n\n\n const useStyles = makeStyles((theme) => ({\n     logo: {\n         backgroundColor: \"main\",\n         height: \"8em\",\n         [theme.breakpoints.down(\"md\")]: {\n             height: \"7em\",\n             width: \"80%\",\n             marginLeft: \"-10em\"\n         },\n         [theme.breakpoints.down(\"xs\")]: {\n             height: \"5.5em\",\n             width: \"75%\",\n             marginLeft: \"-5.5em\"\n         }\n     },\n     logoContainer: {\n        padding: 0,\n        marginRight: 'auto'\n     },\n     appbar: {\n         backgroundColor: \"#EF4B4B\",\n         zIndex: theme.zIndex.modal + 1\n     },\n     toolbarMargin: {\n         ...theme.mixins.toolbar,\n         marginBootom: \"3em\",\n         [theme.breakpoints.down(\"md\")]: {\n             marginBottom: \"2em\"\n         },\n        [theme.breakpoints.down(\"xs\")]: {\n            marginBottom: \"1.25em\"\n        }\n     },\n     sectionDesktop: {\n         display: 'none',\n     [theme.breakpoints.up('md')]: {\n         display: 'flex',\n        },\n     },\n     sectionMobile: {\n         dipaly: 'flex',\n         [theme.breakpoints.up('md')]: {\n             display: 'none'\n         },\n     },\n     desktopMenu: {\n         \"& .MuiMenu-list\": {\n             width: \"100%\",\n             height: \"100%\",\n             Color: \"#242433\"\n         }\n     }\n }));\n\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [mobileAnchorEl, setMobileAnchorEl] = useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileAnchorEl(null);\n    }\n    \n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const menuId = 'primary-account-menu';\n    const renderMenu = (\n        <Menu\n            className={classes.desktopMenu}\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem \n                onClick={handleMenuClose}\n                component={Link}\n                to={\"/mymatches\"}\n            >\n                My Matches\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>Account Settings</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-account-menu-mobile'\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <AppsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Matches</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <>\n\n            <AppBar className={classes.appbar} position=\"static\">\n                <ToolBar disableGutters>\n                    <Button \n                        className={classes.logoContainer}\n                        component={Link}\n                        to={\"/\"}\n                    >\n                        <img alt=\"site logo\" src={logo} className={classes.logo} />\n                    </Button>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton \n                            color=\"inherit\"\n                            component={Link}\n                            to={\"/matches\"}\n                            \n                        >\n                            <Badge badgeContent={null} color=\"secondary\">\n                                <AppsIcon style={{fontSize:\"60\"}}/>\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            style={{marginRight: \"5em\"}}\n                            \n                            aria-label=\"accout of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle style={{fontSize:\"60\"}} />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton> \n                    </div>\n                </ToolBar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n            <div className={classes.toolbarMargin} />\n        </>\n    )\n};\n\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/card/card.js",["65","66"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport API from \"../../utils/API\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grow } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ThumbUpTwoToneIcon from \"@material-ui/icons/ThumbUpTwoTone\";\nimport ThumbDownTwoToneIcon from \"@material-ui/icons/ThumbDownTwoTone\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardContainer: {\n    width: \"100%\"\n  },\n  thumbsContainer: {\n    marginTop: \"3em\"\n  },\n  posterCard: {\n    marginTop: \"5em\",\n    width: \"16.7em\",\n    maxWidth: \"16.7em\",\n    margin: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginTop: \"2em\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"15em\",\n      margin: \"1em\",\n      marginTop: \"-1em\"\n    }\n  },\n  backdropCard: {\n    maxHeight: \"25em\",\n    maxWidth: \"16.7em\",\n    width: \"16.7em\",\n    marginTop: \"4em\",\n    marginRight: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginTop: \"4em\",\n      height: \"30em\",\n      width: \"16.7em\",\n      maxWidth: \"16.7em\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"15em\",\n      marginRight: \"1em\",\n      marginTop: \"8em\"\n    }\n  },\n  cardHeader: {\n    color: theme.palette.common.grey,\n    opacity: 1,\n    height: \".5em\"\n  },\n  posterImage: {\n    height: \"30em\",\n    width: \"20em\"\n  },\n  backdropImage: {\n    height: \"15em\",\n    width: \"100%\"\n  },\n  buttonContainer: {\n    margin: theme.spacing(1)\n  },\n  thumbsUp: {\n    color: \"darkGreen\"\n  },\n  thumbsDown: {\n    color: theme.palette.common.red\n  },\n  rating: {\n    fontSize: \"22px\",\n    position: \"relative\",\n    bottom: 8\n  },\n  ratingIcon: {\n    marginTop: \".75em\"\n  }\n}));\n\nexport default function MovieCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  let results = [];\n  let pageNumber = 1;\n\n  const [movieState, setmovieState] = useState({\n    title: \"\",\n    posterImage: \"\",\n    backdropImage: \"\",\n    description: \"\",\n    rating: \"\",\n    reviewCount: \"\",\n    release: \"\",\n    genre: \"\"\n  });\n\n  const [checked, setChecked] = useState(false);\n\n  const handleInfoButton = () => {\n    setChecked(!checked);\n  };\n\n  useEffect(() => {\n    API.getMovies(pageNumber).then((response) => {\n      results = response.data.results;\n      console.log(results);\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n    });\n  }, []);\n\n  function addMovie(movieState) {\n    return API.saveMovie({\n      ...movieState\n    })\n      .then((res) => {\n        console.log(\"response\", res);\n        return res.data;\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleShift() {\n    pageNumber++;\n    API.getMovies(pageNumber).then((response) => {\n      results = response.data.results;\n      console.log(results);\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n    });\n  }\n\n  const handleNo = () => {\n    results = JSON.parse(localStorage.getItem(\"movieArray\"));\n    if (results.length === 1) {\n      handleShift();\n    } else {\n      results.shift();\n\n      localStorage.setItem(\"movieArray\", JSON.stringify(results));\n      setmovieState({\n        ...movieState,\n        title: results[0].title,\n        posterImage: results[0].poster_path,\n        backdropImage: results[0].backdrop_path,\n        description: results[0].overview,\n        rating: results[0].vote_average,\n        reviewCount: results[0].vote_count,\n        release: results[0].release_date,\n        genre: results[0].genre\n      });\n    }\n  };\n\n  const handleYes = () => {\n    results = JSON.parse(localStorage.getItem(\"movieArray\"));\n    let movieData = results[0];\n    if (results.length === 1) {\n      handleShift();\n    } else {\n\n    results.shift();\n    localStorage.setItem(\"movieArray\", JSON.stringify(results));\n    setmovieState({\n      ...movieState,\n      title: results[0].title,\n      posterImage: results[0].poster_path,\n      backdropImage: results[0].backdrop_path,\n      description: results[0].overview,\n      rating: results[0].vote_average,\n      reviewCount: results[0].vote_count,\n      release: results[0].release_date,\n      genre: results[0].genre\n    });\n  }\n    addMovie(movieState);\n  };\n\n  const thumbsDown = (\n    <>\n      <Grid item>\n        <Button onClick={handleNo}>\n          <ThumbDownTwoToneIcon\n            className={classes.thumbsDown}\n            fontSize=\"large\"\n          />\n        </Button>\n      </Grid>\n    </>\n  );\n\n  const thumbsUp = (\n    <>\n      <Grid item>\n        <Button onClick={handleYes}>\n          <ThumbUpTwoToneIcon\n            className={classes.thumbsUp}\n            fontSize=\"large\"\n            color=\"primary\"\n          />\n        </Button>\n      </Grid>\n    </>\n  );\n  return (\n    <>\n      <Container>\n        <Grid\n          container\n          className={classes.cardContainer}\n          direction=\"row\"\n          justify=\"center\"\n          alignContent=\"flex-end\"\n          alignItems=\"center\"\n        >\n          {matches ? null : thumbsDown}\n          <Card className={classes.posterCard}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.posterImage}\n                component=\"image\"\n                image={\n                  \"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n                  `${movieState.posterImage}`\n                }\n              ></CardMedia>\n            </CardActionArea>\n            <CardContent>\n              <CardHeader\n                className={classes.cardHeader}\n                title={`${movieState.title}`}\n                subheader={`${movieState.release}`}\n                action={\n                  <IconButton aria-label=\"information\">\n                    <InfoIcon onClick={handleInfoButton} />\n                  </IconButton>\n                }\n              />\n            </CardContent>\n          </Card>\n          <Collapse in={checked} timeout=\"auto\" unmountOnExit>\n            <Grow\n              in={checked}\n              style={{ transformOrigin: \"0 0 0\" }}\n              {...(checked ? { timeout: 1000 } : {})}\n            >\n              <Card className={classes.backdropCard}>\n                <CardActionArea>\n                  <CardMedia\n                    className={classes.backdropImage}\n                    component=\"image\"\n                    image={\n                      \"https://www.themoviedb.org/t/p/w600_and_h900_bestv2\" +\n                      `${movieState.backdropImage}`\n                    }\n                  />\n                </CardActionArea>\n                <CardContent>\n                  {`${movieState.description}`}\n                  <div />\n                  <StarRoundedIcon\n                    className={classes.ratingIcon}\n                    fontSize=\"large\"\n                  />\n                  <span className={classes.rating}>\n                    {`${movieState.rating}`} / 10\n                  </span>\n                </CardContent>\n              </Card>\n            </Grow>\n          </Collapse>\n          {matches ? null : thumbsUp}\n        </Grid>\n        <Grid\n          container\n          className={classes.thumbsContainer}\n          direction=\"row\"\n          justify=\"center\"\n          alignContent=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <Grid item style={{ marginRight: \"5em\" }}>\n            {matches ? thumbsDown : null}\n          </Grid>\n          <Grid item style={{ marginLeft: \"5em\" }}>\n            {matches ? thumbsUp : null}\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n",["67","68"],"/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/utils/API.js",["69"],"import axios from \"axios\";\n\nexport default {\n   \n  // Gets all movies\n  getMovies: function (pageNumber) {\n    return axios.get(\n      // Gets all movies\n      `https://api.themoviedb.org/3/discover/movie?api_key=1a0244fad68dbfa1e242e232ce4a493c&language=en-US&primary_release_year=2020&with_genres=80&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNumber}`\n    );\n  },\n  getMatches: function() {\n    return axios.get(\"/api/movies\")\n  },\n  // Gets movie with given id\n  getMovie: function (id) {\n    return axios.get(\"/api/movies/\" + id);\n  },\n  // Deletes movie with given id\n  deleteMovie: function (id) {\n    return axios.delete(\"/api/movies/\" + id);\n  },\n  saveMovie: function (movieData) {\n    return axios.post(\"/api/movies\", movieData);\n  }\n};\n","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/LoginHero/Login.js",["70"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport { CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  heroContainer: {\n    marginTop: \"10em\",\n    width: \"30em\",\n  },\n  hero: {\n    marginTop: \"10em\",\n    height: \"20em\",\n  },\n  card: {\n    boxShadow: \"12px 12px 2px 1px rgba(0, 0, 255, .2)\",\n    borderStyle: \"groove\"\n\n  },\n  cardHeader: {\n    display: \"inline-block\",\n  },\n  cardContent: {\n    \n  },\n  div: {\n    borderRight: \"1px dashed grey\",\n    height: \"15em\",\n    marginTop: \"-1em\",\n    marginBottom: \"-2em\",\n    marginRight: \"5em\",\n  },\n  button: {\n    backgroundColor: theme.palette.common.red,\n    height: \"14em\",\n    width: \"1em\",\n    float: \"right\",\n    color: \"white\"\n  },\n  email: {\n    marginTop: \"1.5em\",\n    marginLeft: \"2em\",\n    padding: \".5em\"\n  },\n  password: {\n    marginTop: \"1.5em\",\n    marginLeft: \"2em\",\n    padding: \".5em\"\n  },\n  signup: {\n    marginTop: \"2em\",\n    width: \"30em\",\n    textAlign: \"center\"\n  },\n  signUpForm: {\n    marginLeft: \"1em\",\n    marginRight: \"1em\",\n    textAlign: \"center\"\n  },\n  leftQuestions: {\n    marginRight: \"2em\",\n    marginBottom: \"1em\"\n  },\n  rightQuestions: {\n    marginLeft: \"2em\",\n    marginBottom: \"1em\"\n  },\n  submitButton: {\n    display: \"block\",\n    margin: \"auto\",\n    marginTop: \"1em\"\n  }\n\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const [ open, setOpen ] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Container className={classes.heroContainer}>\n        <Card className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            <Button className={classes.button}>\n              Admit\n            </Button>\n          <div className={classes.div}>\n            <form>\n            <TextField \n              className={classes.email} \n              id=\"standard-basic\" \n              label=\"Email\" \n            />\n            <TextField \n              className={classes.password} \n              id=\"standard-basic\" \n              label=\"Password\" \n            />\n            </form>\n          </div>\n          </CardContent>\n        </Card>\n        <div className={classes.signup}>\n          <Button \n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleClickOpen}\n          >\n          Not a user? Sign up for free today!  \n          </Button>\n          <Dialog\n            disableBackdropClick\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Signup\"}\n              <Button style={{ float: \"right\", height: \"1em\", width: \"1em\"}}>\n              <CloseRoundedIcon button onClick={handleClose}/>\n              </Button>\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <form className={classes.signUpForm}>\n                  <TextField\n                  className={classes.leftQuestions}\n                  label=\"First Name\"\n                  />\n                  <TextField\n                  className={classes.rightQuestions}\n                  label=\"Last Name\"\n                  />\n                  <TextField\n                  className={classes.leftQuestions}\n                  label=\"Email\"\n                  />\n                  <TextField\n                  className={classes.rightQuestions}\n                  label=\"password\"\n                  />\n                  <Button \n                    className={classes.submitButton}\n                    variant=\"outlined\">\n                    Submit\n                  </Button>\n                </form>\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </Container>\n    </>\n  );\n}","/Users/ericlafontsee/Projects/Movie-Match/movie-match/src/components/card/flipCard.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":1,"column":26,"nodeType":"78","messageId":"79","endLine":1,"endColumn":39},{"ruleId":"76","severity":1,"message":"81","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"82","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":16},{"ruleId":"76","severity":1,"message":"83","line":76,"column":11,"nodeType":"78","messageId":"79","endLine":76,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":118,"column":17,"nodeType":"86","endLine":118,"endColumn":38},{"ruleId":"76","severity":1,"message":"87","line":190,"column":9,"nodeType":"78","messageId":"79","endLine":190,"endColumn":18},{"ruleId":"72","replacedBy":"88"},{"ruleId":"74","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":1,"nodeType":"92","endLine":26,"endColumn":3},{"ruleId":"76","severity":1,"message":"93","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":41,"column":17,"nodeType":"86","endLine":41,"endColumn":38},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'useEffect' is defined but never used.","'MenuIcon' is defined but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'results' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'movieData' is assigned a value but never used.",["94"],["95"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'DialogActions' is defined but never used.","no-global-assign","no-unsafe-negation"]